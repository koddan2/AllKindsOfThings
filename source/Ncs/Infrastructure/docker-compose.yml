version: "3"
services:
  # keycloak-postgres:
  #   hostname: keycloak-postgres
  #   image: docker.io/postgres:15.1-alpine
  #   env_file: "./Configuration/keycloak-postgres.env"
  #   ports:
  #     - "15432:5432/tcp"
  #   volumes:
  #     - keycloak-postgres:/var/lib/postgresql/data
  #     - ./Startup/postgres/init-db:/docker-entrypoint-initdb.d
  #   restart: unless-stopped
  # keycloak:
  #   hostname: keycloak
  #   image: kustom/keycloak:latest
  #   env_file: ./Configuration/keycloak.env
  #   build:
  #     context: ./Services/keycloak
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - db
  #   ports:
  #     - 8080:8080/tcp
  #     - 8443:8443/tcp
  #   restart: unless-stopped
  #   command: ["start", "--optimized"]
  #   # command: ["show-config"]

  # redis:
  #   hostname: redis
  #   image: docker.io/redis:7.0.8
  #   command: ["redis-server", "--appendonly", "no"]
  #   volumes:
  #     - ./Instance/redis:/data
  #   restart: unless-stopped

  # zookeeper:
  #   hostname: zookeeper
  #   image: docker.io/confluentinc/cp-zookeeper:6.1.9
  #   volumes:
  #     - ./Instance/zookeeper:/var/lib/zookeeper/data
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - 22181:2181
  # kafka:
  #   image: docker.io/confluentinc/cp-kafka:6.1.9
  #   volumes:
  #     - ./Instance/kafka:/var/lib/kafka/data
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 29092:29092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # prometheus:
  #   hostname: prometheus
  #   image: quay.io/prometheus/prometheus:v2.41.0
  #   ports:
  #     - 9090:9090/tcp
  #   volumes:
  #     - ./Instance/prometheus/etc:/etc/prometheus
  #     - ./Instance/prometheus/data:/prometheus

  ncs-postgres:
    hostname: ncs-postgres
    image: localhost/kustom/postgres:latest
    build:
      context: ./Services/postgres
      dockerfile: Dockerfile
    env_file: "./Configuration/ncs-postgres.env"
    ports:
      - "5432:5432/tcp"
    volumes:
      - ncs-postgres:/var/lib/postgresql/data
    restart: unless-stopped
volumes:
#   keycloak-postgres:
  ncs-postgres:
